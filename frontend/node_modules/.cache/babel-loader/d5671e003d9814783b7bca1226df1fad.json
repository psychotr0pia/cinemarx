{"ast":null,"code":"var _jsxFileName = \"/home/psychotropia/Documents/cinemarx/frontend/src/Components/ClientForm.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientForm = props => {\n  const validationSchema = Yup.object().shape({\n    rut: Yup.string().required(\"Required\"),\n    password: Yup.string().required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Formik, { ...props,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"rut\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"rut\",\n            className: \"d-block invalid-feedback\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            className: \"d-block invalid-feedback\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"lg\",\n          block: \"block\",\n          type: \"submit\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ClientForm;\nexport default ClientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"names":["React","Yup","Formik","Form","Field","ErrorMessage","FormGroup","FormControl","Button","ClientForm","props","validationSchema","object","shape","rut","string","required","password","children"],"sources":["/home/psychotropia/Documents/cinemarx/frontend/src/Components/ClientForm.js"],"sourcesContent":["import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\n  \nconst ClientForm = (props) => {\n  const validationSchema = Yup.object().shape({\n    rut: Yup.string().required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n  });\n  return (\n    <div className=\"form-wrapper\">\n      <Formik {...props} validationSchema={validationSchema}>\n        <Form>\n          <FormGroup>\n            <Field name=\"rut\" type=\"text\" \n                className=\"form-control\" />\n            <ErrorMessage\n              name=\"rut\"\n              className=\"d-block invalid-feedback\"\n              component=\"span\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Field name=\"password\" type=\"text\" \n                className=\"form-control\" />\n            <ErrorMessage\n              name=\"password\"\n              className=\"d-block invalid-feedback\"\n              component=\"span\"\n            />\n          </FormGroup>\n          <Button variant=\"danger\" size=\"lg\" \n            block=\"block\" type=\"submit\">\n            {props.children}\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n  \nexport default ClientForm;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,iBAA/C;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC5B,MAAMC,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;IAC1CC,GAAG,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADqC;IAE1CC,QAAQ,EAAEhB,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;EAFgC,CAAnB,CAAzB;EAIA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,uBACE,QAAC,MAAD,OAAYN,KAAZ;MAAmB,gBAAgB,EAAEC,gBAArC;MAAA,uBACE,QAAC,IAAD;QAAA,wBACE,QAAC,SAAD;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,KAAZ;YAAkB,IAAI,EAAC,MAAvB;YACI,SAAS,EAAC;UADd;YAAA;YAAA;YAAA;UAAA,QADF,eAGE,QAAC,YAAD;YACE,IAAI,EAAC,KADP;YAEE,SAAS,EAAC,0BAFZ;YAGE,SAAS,EAAC;UAHZ;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAUE,QAAC,SAAD;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,IAAI,EAAC,MAA5B;YACI,SAAS,EAAC;UADd;YAAA;YAAA;YAAA;UAAA,QADF,eAGE,QAAC,YAAD;YACE,IAAI,EAAC,UADP;YAEE,SAAS,EAAC,0BAFZ;YAGE,SAAS,EAAC;UAHZ;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAmBE,QAAC,MAAD;UAAQ,OAAO,EAAC,QAAhB;UAAyB,IAAI,EAAC,IAA9B;UACE,KAAK,EAAC,OADR;UACgB,IAAI,EAAC,QADrB;UAAA,UAEGD,KAAK,CAACQ;QAFT;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAnCD;;KAAMT,U;AAqCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}