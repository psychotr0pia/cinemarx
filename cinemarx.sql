-- name ENUM('value1', 'value2', ..., 'value n')
-- faltan enums
-- se cambio edad de CLIENTE a FECHA_NACIMIENTO
CREATE TABLE PELICULA (
  ID_PELICULA int NOT NULL AUTO_INCREMENT,
  TITULO varchar(100) NOT NULL,
  DIRECTOR varchar(100) NOT NULL,
  DURACION int NOT NULL,
  RESTRICCION varchar(100) DEFAULT 'false',
  ELENCO varchar(100) NOT NULL,
  SINOPSIS varchar(1000) NOT NULL,
  CALIFICACION varchar(100) DEFAULT "Todo publico",
  PRIMARY KEY (ID_PELICULA)
); 


CREATE TABLE ADMIN (
   RUT int NOT NULL,
   PASSWORD varchar(100) NOT NULL,
   PRIMARY KEY (RUT)
);

CREATE TABLE FUNCIONES (
	ID_FUNCIONES int NOT NULL AUTO_INCREMENT,
	RUT INT NOT NULL,
	ID_PELICULA INT NOT NULL,
	CODIGO_SALA INT NOT NULL,
	HORARIO DATETIME NOT NULL,
	PRIMARY KEY (ID_FUNCIONES),
	FOREIGN KEY (RUT) REFERENCES ADMIN(RUT),
	FOREIGN KEY (ID_PELICULA) REFERENCES PELICULA(ID_PELICULA),
	FOREIGN KEY (CODIGO_SALA) REFERENCES SALAS(CODIGO_SALA)
	ON UPDATE CASCADE
	ON DELETE CASCADE
);

CREATE TABLE SALAS (
	CODIGO_SALA INT NOT NULL AUTO_INCREMENT,
	DISPONIBILIDAD VARCHAR(100) NOT NULL,
	CANTIDAD_DE_ASIENTOS INT NOT NULL,
	TIPO_SALA VARCHAR(100) NOT NULL DEFAULT "normal",
       	PRECIO_SALA INT NOT NULL DEFAULT 3500,
	PRIMARY KEY (CODIGO_SALA)	
);

CREATE TABLE ASIENTO (
	CODIGO_DE_ASIENTO INT NOT NULL AUTO_INCREMENT,
	CODIGO_SALA INT NOT NULL,
	DISPONIBILIDAD VARCHAR(100) NOT NULL,
	FILA INT NOT NULL,
	COLUMNA INT NOT NULL,
	PRIMARY KEY (CODIGO_DE_ASIENTO),
	FOREIGN KEY (CODIGO_SALA) REFERENCES SALAS(CODIGO_SALA)
	ON DELETE CASCADE
);

CREATE TABLE TICKETS (
	ID_TICKETS INT NOT NULL AUTO_INCREMENT,
	ID_FUNCIONES INT NOT NULL,
	CODIGO_DE_ASIENTO INT NOT NULL,
	PRECIO INT NOT NULL,
	FECHA_COMPRA DATETIME NOT NULL,
	PRIMARY KEY (ID_TICKETS),
	FOREIGN KEY (ID_FUNCIONES) REFERENCES FUNCIONES(ID_FUNCIONES),
	FOREIGN KEY (CODIGO_DE_ASIENTO) REFERENCES ASIENTO(CODIGO_DE_ASIENTO)
	ON DELETE CASCADE
);

CREATE TABLE CLIENTE (
	RUT INT NOT NULL,
	ID_TICKETS INT NOT NULL,
	NOMBRE VARCHAR(100) NOT NULL,
	APELLIDO VARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	PRIMARY KEY (RUT),
	FOREIGN KEY (ID_TICKETS) REFERENCES TICKETS(ID_TICKETS)
	ON UPDATE CASCADE
	ON DELETE CASCADE
);
--
